(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{436:function(t,e,s){"use strict";s.r(e);var a=s(19),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"异步加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步加载"}},[t._v("#")]),t._v(" 异步加载")]),t._v(" "),s("p",[t._v("对于重要的脚本可以通过预加载方式避免阻塞页面渲染，但是对于那些用于监测和分析的脚本，优先级不是那么高的，可以通过异步加载来解决问题")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/eng_async_1.png"),alt:"流程"}}),t._v(" "),s("ul",[s("li",[s("code",[t._v("defer async")]),t._v(" 网络下载部分都是一样的都是异步不会阻塞页面解析")]),t._v(" "),s("li",[s("code",[t._v("async")]),t._v(" 在下载完成后就会执行不论在哪个位置，这时会阻塞页面解析")]),t._v(" "),s("li",[s("code",[t._v("defer")]),t._v(" 严格按照顺序执行，会在页面解析完成后执行")]),t._v(" "),s("li",[s("code",[t._v("async")]),t._v(" 适合不依赖其他脚本或者不被其他加班依赖（执行顺序无关）")])])])}),[],!1,null,null,null);e.default=n.exports}}]);