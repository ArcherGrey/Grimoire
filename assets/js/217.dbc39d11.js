(window.webpackJsonp=window.webpackJsonp||[]).push([[217],{616:function(_,v,e){"use strict";e.r(v);var l=e(19),t=Object(l.a)({},(function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h1",{attrs:{id:"网络"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网络"}},[_._v("#")]),_._v(" 网络")]),_._v(" "),e("h2",{attrs:{id:"tcp-三次握手-四次挥手"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tcp-三次握手-四次挥手"}},[_._v("#")]),_._v(" tcp 三次握手 四次挥手")]),_._v(" "),e("p",[_._v("三次握手：")]),_._v(" "),e("ol",[e("li",[_._v("客户端 发送 序号是 "),e("code",[_._v("i")]),_._v(" 的 "),e("code",[_._v("syn")]),_._v(" 包到服务器，进入 "),e("code",[_._v("SYN_SENT")]),_._v(" 状态")]),_._v(" "),e("li",[_._v("服务器 收到 返回序号是 "),e("code",[_._v("i+1")]),_._v(" 的 "),e("code",[_._v("ASK")]),_._v("，表示客户端发送的请求收到，同时向客户端发送序号为 "),e("code",[_._v("j")]),_._v(" 的 "),e("code",[_._v("syn")]),_._v(" 包，进入 "),e("code",[_._v("SYN_RECV")]),_._v(" 状态")]),_._v(" "),e("li",[_._v("客户端 收到 返回序号是 "),e("code",[_._v("j+1")]),_._v(" 的 "),e("code",[_._v("ASK")]),_._v("，表示客户端收到，此时客户端和服务器都进入 "),e("code",[_._v("ESTABLISHED")]),_._v(" 状态，完成三次握手")])]),_._v(" "),e("p",[_._v("四次挥手：")]),_._v(" "),e("ol",[e("li",[_._v("客户端发送一个 "),e("code",[_._v("FIN")]),_._v("，用来关闭客户到服务器的数据传送。")]),_._v(" "),e("li",[_._v("服务器收到这个 "),e("code",[_._v("FIN")]),_._v("，它发回一个 "),e("code",[_._v("ACK")]),_._v("，确认序号为收到的序号加 1。和 "),e("code",[_._v("SYN")]),_._v(" 一样，一个 "),e("code",[_._v("FIN")]),_._v(" 将占用一个序号。")]),_._v(" "),e("li",[_._v("服务器关闭客户端的连接，发送一个 "),e("code",[_._v("FIN")]),_._v(" 给客户端。")]),_._v(" "),e("li",[_._v("客户端发回 "),e("code",[_._v("ACK")]),_._v(" 报文确认，并将确认序号设置为收到序号加 1。")])]),_._v(" "),e("p",[_._v("为什么是四次，因为 TCP 是全双工通信的")]),_._v(" "),e("ul",[e("li",[_._v("第一次挥手 因此当主动方发送断开连接的请求（即 FIN 报文）给被动方时，仅仅代表主动方不会再发送数据报文了，但主动方仍可以接收数据报文。")]),_._v(" "),e("li",[_._v("第二次挥手 被动方此时有可能还有相应的数据报文需要发送，因此需要先发送 ACK 报文，告知主动方“我知道你想断开连接的请求了”。这样主动方便不会因为没有收到应答而继续发送断开连接的请求（即 FIN 报文）。")]),_._v(" "),e("li",[_._v("第三次挥手 被动方在处理完数据报文后，便发送给主动方 FIN 报文；这样可以保证数据通信正常可靠地完成。发送完 FIN 报文后，被动方进入 LAST_ACK 阶段（超时等待）。")]),_._v(" "),e("li",[_._v("第四挥手 如果主动方及时发送 ACK 报文进行连接中断的确认，这时被动方就直接释放连接，进入可用状态。")])]),_._v(" "),e("h2",{attrs:{id:"安全"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安全"}},[_._v("#")]),_._v(" 安全")]),_._v(" "),e("ul",[e("li",[_._v("dns 劫持：解析到错误的地址\n"),e("ul",[e("li",[_._v("本地：木马病毒修改本地 hosts 文件，dns 缓存等\n"),e("ul",[e("li",[_._v("防火墙 杀毒软件")])])]),_._v(" "),e("li",[_._v("路由：修改路由器默认配置\n"),e("ul",[e("li",[_._v("修改默认密码")])])]),_._v(" "),e("li",[_._v("服务器：攻击 dns 服务器\n"),e("ul",[e("li",[_._v("准备备用域名")])])])])]),_._v(" "),e("li",[_._v("XSS 攻击\n"),e("ul",[e("li",[_._v("HttpOnly 防止劫取 Cookie")]),_._v(" "),e("li",[_._v("用户的输入检查")]),_._v(" "),e("li",[_._v("服务端的输出检查")])])]),_._v(" "),e("li",[_._v("CSRF 攻击\n"),e("ul",[e("li",[_._v("验证码")]),_._v(" "),e("li",[_._v("Referer Check")]),_._v(" "),e("li",[_._v("Token 验证")])])])]),_._v(" "),e("h2",{attrs:{id:"资源列表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#资源列表"}},[_._v("#")]),_._v(" 资源列表")]),_._v(" "),e("ul",[e("li",[_._v("接口调试\n"),e("ul",[e("li",[_._v("postman")])])]),_._v(" "),e("li",[_._v("模拟操作\n"),e("ul",[e("li",[_._v("Puppeteer "),e("a",{attrs:{href:"https://zhaoqize.github.io/puppeteer-api-zh_CN/#/",target:"_blank",rel:"noopener noreferrer"}},[_._v("文档"),e("OutboundLink")],1)])])])])])}),[],!1,null,null,null);v.default=t.exports}}]);