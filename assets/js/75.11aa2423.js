(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{476:function(s,a,t){"use strict";t.r(a);var e=t(19),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"git-基本概念和使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-基本概念和使用"}},[s._v("#")]),s._v(" git 基本概念和使用")]),s._v(" "),t("h2",{attrs:{id:"分区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分区"}},[s._v("#")]),s._v(" 分区")]),s._v(" "),t("ul",[t("li",[s._v("工作区 "),t("code",[s._v("Working Directory")]),s._v(": 直接编辑的区域")]),s._v(" "),t("li",[s._v("暂存区 "),t("code",[s._v("stage or index")]),s._v(": 数据暂时存放的区域，数据进入本地代码仓库之前存放的区域(存放在 "),t("code",[s._v(".git/index")]),s._v(" 中)")]),s._v(" "),t("li",[s._v("版本库，也叫本地仓库 "),t("code",[s._v("commit History")])])]),s._v(" "),t("h3",{attrs:{id:"分区转换指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分区转换指令"}},[s._v("#")]),s._v(" 分区转换指令")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("git add")]),s._v(" 工作区 -> 暂存区")]),s._v(" "),t("li",[t("code",[s._v("git commit")]),s._v(" 暂存区 -> 版本库")]),s._v(" "),t("li",[t("code",[s._v("git push")]),s._v(" 版本库 -> 远程仓库")])]),s._v(" "),t("img",{attrs:{src:s.$withBase("/git_doc_1.png"),alt:"分区转换"}}),s._v(" "),t("h3",{attrs:{id:"分区对比指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分区对比指令"}},[s._v("#")]),s._v(" 分区对比指令")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("git diff")]),s._v(" 工作区 -> 暂存区")]),s._v(" "),t("li",[t("code",[s._v("git diff head")]),s._v(" 工作区 -> 版本库")]),s._v(" "),t("li",[t("code",[s._v("git diff --cached")]),s._v(" 暂存区 -> 版本库")])]),s._v(" "),t("img",{attrs:{src:s.$withBase("/git_doc_2.png"),alt:"分区对比"}}),s._v(" "),t("h2",{attrs:{id:"原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),t("p",[t("code",[s._v("git init")]),s._v(" 初始化会创建 "),t("code",[s._v(".git")]),s._v(" 目录：")]),s._v(" "),t("div",{staticClass:"language-auto line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("└── .git\n    ├── HEAD\n    ├── config\n    ├── description\n    ├── hooks\n    │   ├── applypatch-msg.sample\n    │   ├── commit-msg.sample\n    │   ├── fsmonitor-watchman.sample\n    │   ├── post-update.sample\n    │   ├── pre-applypatch.sample\n    │   ├── pre-commit.sample\n    │   ├── pre-push.sample\n    │   ├── pre-rebase.sample\n    │   ├── pre-receive.sample\n    │   ├── prepare-commit-msg.sample\n    │   └── update.sample\n    ├── info\n    │   └── exclude\n    ├── objects\n    │   ├── info\n    │   └── pack\n    └── refs\n        ├── heads\n        └── tags\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br")])]),t("p",[s._v("其中 "),t("code",[s._v("objects")]),s._v(" 目录是存储文件变化的核心，里面存放的文件名是根据 "),t("code",[s._v("SHA1")]),s._v(" 计算得到，文件内容就是压缩后的二进制文件")]),s._v(" "),t("p",[t("code",[s._v("Object")]),s._v(" 有三种类型：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("Blob")]),s._v(": 文件")]),s._v(" "),t("li",[t("code",[s._v("Tree")]),s._v(": 文件夹")]),s._v(" "),t("li",[t("code",[s._v("Commit")]),s._v(": 提交节点")])]),s._v(" "),t("img",{attrs:{src:s.$withBase("/git_doc_3.png"),alt:"映射关系"}}),s._v(" "),t("h2",{attrs:{id:"分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分支"}},[s._v("#")]),s._v(" 分支")]),s._v(" "),t("div",{staticClass:"language-auto line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(".git\n├── ......\n├── HEAD\n└── refs\n    ├── heads\n    │   └── master\n    ├── remotes\n    │   └── origin\n    │       └── HEAD\n    └── tags\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("ul",[t("li",[t("code",[s._v("heads")]),s._v(" 记录本地所有分支")]),s._v(" "),t("li",[t("code",[s._v("remote")]),s._v(" 记录远程分支")])]),s._v(" "),t("p",[s._v("分支当前指针指向最近一次 "),t("code",[s._v("commit")])]),s._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("注")]),s._v(" "),t("p",[s._v("未被 "),t("code",[s._v("commit")]),s._v(" 的文件（未放入版本库）切换分支时会被抛弃")])]),s._v(" "),t("h3",{attrs:{id:"合并分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#合并分支"}},[s._v("#")]),s._v(" 合并分支")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("merge")]),s._v(": 解决冲突后会创建一个新的 "),t("code",[s._v("commit")]),s._v(" ，保留之前的 "),t("code",[s._v("commit")]),s._v(" 记录")]),s._v(" "),t("li",[t("code",[s._v("rebase")]),s._v(": 修改 "),t("code",[s._v("branch out")]),s._v(" 位置，之前在最近节点合并之前 "),t("code",[s._v("commit")])])]),s._v(" "),t("h2",{attrs:{id:"版本回滚"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#版本回滚"}},[s._v("#")]),s._v(" 版本回滚")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("revert")]),s._v(" 回退上一个 "),t("code",[s._v("commit")])]),s._v(" "),t("li",[t("code",[s._v("reset")]),s._v(" 回退到指定 "),t("code",[s._v("commit")])])]),s._v(" "),t("h2",{attrs:{id:"代码暂存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码暂存"}},[s._v("#")]),s._v(" 代码暂存")]),s._v(" "),t("p",[s._v("当我们在当前分支工作时，不得已需要切换到其他分支处理事情而不想 "),t("code",[s._v("commit")]),s._v(" 时，可以使用 "),t("code",[s._v("git stash")]),s._v(" 将那些数据都暂存到 "),t("code",[s._v("Git")]),s._v(" 提供的栈中")])])}),[],!1,null,null,null);a.default=n.exports}}]);