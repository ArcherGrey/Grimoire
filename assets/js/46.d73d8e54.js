(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{447:function(e,t,a){"use strict";a.r(t);var r=a(19),n=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"前端监控"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端监控"}},[e._v("#")]),e._v(" 前端监控")]),e._v(" "),a("h2",{attrs:{id:"数据采集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据采集"}},[e._v("#")]),e._v(" 数据采集")]),e._v(" "),a("ul",[a("li",[e._v("性能数据采集 "),a("code",[e._v("window.performance API")])]),e._v(" "),a("li",[e._v("错误数据采集\n"),a("ul",[a("li",[e._v("资源加载错误 "),a("code",[e._v("addEventListener('error', callback, true)")]),e._v(" 捕获阶段监听加载失败")]),e._v(" "),a("li",[e._v("js 执行错误 "),a("code",[e._v("window.onerror")])]),e._v(" "),a("li",[e._v("promise "),a("code",[e._v("addEventListener('unhandledrejection', callback)")]),e._v(" 需要手动抛出错误")])])])]),e._v(" "),a("h2",{attrs:{id:"数据上报"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据上报"}},[e._v("#")]),e._v(" 数据上报")]),e._v(" "),a("p",[a("code",[e._v("navigator.sendBeacon()")]),e._v(" 使用户代理（浏览器）在有机会时异步地向服务器发送数据，同时不会延迟页面的卸载或影响下一导航的载入性能。这就解决了提交分析数据时的所有的问题：数据可靠，传输异步并且不会影响下一页面的加载。")])])}),[],!1,null,null,null);t.default=n.exports}}]);