(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{497:function(t,s,a){"use strict";a.r(s);var n=a(19),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"执行机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行机制"}},[t._v("#")]),t._v(" 执行机制")]),t._v(" "),a("h2",{attrs:{id:"引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引擎"}},[t._v("#")]),t._v(" 引擎")]),t._v(" "),a("p",[a("code",[t._v("Google")]),t._v(" 的 "),a("code",[t._v("V8")]),t._v(" 引擎作为示例，该引擎主要包含两个组件：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Memory Heap")]),t._v(" 内存堆，这是内存分配发生的地方")]),t._v(" "),a("li",[a("code",[t._v("Call Stack")]),t._v(" 调用堆栈，这是在代码执行时栈帧存放的位置")])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"javascript-的单线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-的单线程"}},[t._v("#")]),t._v(" "),a("code",[t._v("javascript")]),t._v(" 的单线程")]),t._v(" "),a("p",[a("code",[t._v("JavaScript")]),t._v("语言的一大特点就是单线程，也就是说，同一个时间只能做一件事。")]),t._v(" "),a("p",[a("code",[t._v("JavaScript")]),t._v("的单线程，与它的用途有关。作为浏览器脚本语言，"),a("code",[t._v("JavaScript")]),t._v("的主要用途是与用户互动，以及操作"),a("code",[t._v("DOM")]),t._v("。这决定了它只能是单线程，否则会带来很复杂的同步问题。比如，假定"),a("code",[t._v("JavaScript")]),t._v("同时有两个线程，一个线程在某个"),a("code",[t._v("DOM")]),t._v("节点上添加内容，另一个线程删除了这个节点，这时浏览器应该以哪个线程为准？")]),t._v(" "),a("p",[t._v("所以，为了避免复杂性，从一诞生，"),a("code",[t._v("JavaScript")]),t._v("就是单线程，这已经成了这门语言的核心特征，将来也不会改变。")]),t._v(" "),a("p",[t._v("为了利用多核"),a("code",[t._v("CPU")]),t._v("的计算能力，"),a("code",[t._v("HTML5")]),t._v("提出"),a("code",[t._v("Web Worker")]),t._v("标准，允许"),a("code",[t._v("JavaScript")]),t._v("脚本创建多个线程，但是子线程完全受主线程控制，且不得操作"),a("code",[t._v("DOM")]),t._v("。所以，这个新标准并没有改变"),a("code",[t._v("JavaScript")]),t._v("单线程的本质。")]),t._v(" "),a("p",[t._v("单线程就意味着，所有任务需要排队，前一个任务结束，才会执行后一个任务。如果前一个任务耗时很长，后一个任务就不得不一直等着。")]),t._v(" "),a("p",[t._v("如果排队是因为计算量大，"),a("code",[t._v("CPU")]),t._v("忙不过来，倒也算了，但是很多时候"),a("code",[t._v("CPU")]),t._v("是闲着的，因为"),a("code",[t._v("IO")]),t._v("设备（输入输出设备）很慢（比如"),a("code",[t._v("Ajax")]),t._v("操作从网络读取数据），不得不等着结果出来，再往下执行。")]),t._v(" "),a("p",[a("code",[t._v("JavaScript")]),t._v("语言的设计者意识到，这时主线程完全可以不管"),a("code",[t._v("IO")]),t._v("设备，挂起处于等待中的任务，先运行排在后面的任务。等到"),a("code",[t._v("IO")]),t._v("设备返回了结果，再回过头，把挂起的任务继续执行下去。")]),t._v(" "),a("p",[t._v("于是，所有任务可以分成两种:")]),t._v(" "),a("ul",[a("li",[t._v("同步任务（"),a("code",[t._v("synchronous")]),t._v("）在主线程上排队执行的任务，只有前一个任务执行完毕，才能执行后一个任务")]),t._v(" "),a("li",[t._v("异步任务（"),a("code",[t._v("asynchronous")]),t._v('）不进入主线程、而进入"任务队列"（'),a("code",[t._v("task queue")]),t._v('）的任务，只有"任务队列"通知主线程，某个异步任务可以执行了，该任务才会进入主线程执行。')])]),t._v(" "),a("p",[t._v("常见的异步任务有"),a("code",[t._v("Ajax")]),t._v("操作、定时器（"),a("code",[t._v("setTimeout/setInterval")]),t._v("）、"),a("code",[t._v("UI")]),t._v("事件（"),a("code",[t._v("load")]),t._v("(图片"),a("code",[t._v("js")]),t._v("文件的加载等)、"),a("code",[t._v("resize")]),t._v("、"),a("code",[t._v("scroll")]),t._v("、"),a("code",[t._v("click")]),t._v("等）。")]),t._v(" "),a("h3",{attrs:{id:"event-loop-事件循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event-loop-事件循环"}},[t._v("#")]),t._v(" "),a("code",[t._v("Event-Loop")]),t._v("（事件循环）")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/js_run_1.jpg"),alt:"事件循环流程图"}}),t._v(" "),a("p",[t._v("上面的图具体来说，运行机制如下:")]),t._v(" "),a("ul",[a("li",[t._v('同步和异步任务分别进入不同的执行"场所"，同步的进入主线程，异步的进入'),a("code",[t._v("Event Table")]),t._v(" 并注册函数。")]),t._v(" "),a("li",[t._v("当指定的事情完成时，"),a("code",[t._v("Event Table")]),t._v(" 会将这个函数移入 "),a("code",[t._v("Event Queue")]),t._v("。")]),t._v(" "),a("li",[t._v("主线程内的任务执行完毕为空，会去 "),a("code",[t._v("Event Queue")]),t._v(" 读取对应的函数，进入主线程执行。")]),t._v(" "),a("li",[t._v("上述过程会不断重复，也就是常说的 "),a("code",[t._v("Event Loop")]),t._v("(事件循环)。")])]),t._v(" "),a("p",[t._v("怎么判断栈空：引擎存在 "),a("code",[t._v("monitoring process")]),t._v(" 进程，会持续不断的检查主线程执行栈是否为空，一旦为空，就会去 "),a("code",[t._v("Event Queue")]),t._v(" 那里检查是否有等待被调用的函数。")]),t._v(" "),a("p",[t._v("例子：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ajax")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  url"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("javascript"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("success")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"发送成功!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"代码执行结束"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("上面是一段简易的 "),a("code",[t._v("ajax")]),t._v(" 请求代码：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ajax")]),t._v(" 进入 "),a("code",[t._v("Event Table")]),t._v("，注册回调函数 "),a("code",[t._v("success")]),t._v("。")]),t._v(" "),a("li",[t._v("执行 "),a("code",[t._v("console.log('代码执行结束')")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("ajax")]),t._v(" 事件完成，回调函数 "),a("code",[t._v("success")]),t._v(" 进入"),a("code",[t._v("Event Queue")]),t._v("。")]),t._v(" "),a("li",[t._v("主线程从 "),a("code",[t._v("Event Queue")]),t._v(" 读取回调函数 "),a("code",[t._v("success")]),t._v(" 并执行。")])]),t._v(" "),a("h3",{attrs:{id:"调用栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调用栈"}},[t._v("#")]),t._v(" 调用栈")]),t._v(" "),a("p",[t._v("所有任务都在主线程上执行，形成一个执行栈（"),a("code",[t._v("execution context stack")]),t._v("）")]),t._v(" "),a("p",[t._v("执行栈是一种数据结构，如果执行一个函数就会把该函数放到栈顶，当函数返回的时候，就会将这个函数从栈顶弹出：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("m")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("m")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("当程序开始执行的时候，栈是空的，然后步骤如下：")]),t._v(" "),a("ol",[a("li",[t._v("p 入栈")]),t._v(" "),a("li",[t._v("m 入栈")]),t._v(" "),a("li",[t._v("m 执行完出栈")]),t._v(" "),a("li",[t._v("p 执行完出栈")]),t._v(" "),a("li",[t._v("栈空")])]),t._v(" "),a("p",[t._v("每一个进入栈的过程都称为调用帧")]),t._v(" "),a("p",[t._v("当你达到调用栈最大的大小的时候就会发生 "),a("strong",[t._v("栈溢出")]),t._v("，而且这相当容易发生，特别是在你写递归的时候却没有全方位的测试它，这个时候浏览器会抛出异常。")]),t._v(" "),a("h3",{attrs:{id:"宏任务和微任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#宏任务和微任务"}},[t._v("#")]),t._v(" 宏任务和微任务")]),t._v(" "),a("p",[t._v("除了广义的同步任务和异步任务，我们对任务有更精细的定义：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("macro-task(宏任务)")]),t._v("：包括整体代码，"),a("code",[t._v("setTimeout")]),t._v("，"),a("code",[t._v("setInterval")])]),t._v(" "),a("li",[a("code",[t._v("micro-task(微任务)")]),t._v("："),a("code",[t._v("Promise")]),t._v("，"),a("code",[t._v("process.nextTick")])])]),t._v(" "),a("p",[t._v("不同类型的任务会进入对应的 "),a("code",[t._v("Event Queue")]),t._v("，比如 "),a("code",[t._v("setTimeout")]),t._v(" 和 "),a("code",[t._v("setInterval")]),t._v(" 会进入相同的 "),a("code",[t._v("Event Queue")]),t._v("。\n事件循环的顺序，决定代码的执行顺序。进入整体代码(宏任务)后，开始第一次循环。接着执行所有的微任务。然后再次从宏任务开始，找到其中一个任务队列执行完毕，再执行所有的微任务。听起来有点绕，用一段代码说明：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"setTimeout"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"promise"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"then"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"console"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("ol",[a("li",[t._v("这段代码作为宏任务，进入主线程。")]),t._v(" "),a("li",[t._v("先遇到 "),a("code",[t._v("setTimeout")]),t._v("，那么将其回调函数注册后分发到宏任务 "),a("code",[t._v("Event Queue")]),t._v("。")]),t._v(" "),a("li",[t._v("接下来遇到了 "),a("code",[t._v("Promise，new Promise")]),t._v(" 立即执行，"),a("code",[t._v("then")]),t._v(" 函数分发到微任务 "),a("code",[t._v("Event Queue")]),t._v("。")]),t._v(" "),a("li",[t._v("遇到 "),a("code",[t._v("console.log()")]),t._v("，立即执行。")]),t._v(" "),a("li",[t._v("好啦，整体代码作为第一个宏任务执行结束，看看有哪些微任务？我们发现了 "),a("code",[t._v("then")]),t._v(" 在微任务 "),a("code",[t._v("Event Queue")]),t._v(" 里面，执行。")]),t._v(" "),a("li",[t._v("第一轮事件循环结束了，我们开始第二轮循环，当然要从宏任务 "),a("code",[t._v("Event Queue")]),t._v(" 开始。我们发现了宏任务 "),a("code",[t._v("Event Queue")]),t._v(" 中 "),a("code",[t._v("setTimeout")]),t._v(" 对应的回调函数，立即执行。")]),t._v(" "),a("li",[t._v("结束。")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/js_run_2.jpg"),alt:"宏任务微任务流程图"}})])}),[],!1,null,null,null);s.default=e.exports}}]);