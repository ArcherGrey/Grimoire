(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{493:function(v,_,e){"use strict";e.r(_);var o=e(19),c=Object(o.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"jsonp-和-json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsonp-和-json"}},[v._v("#")]),v._v(" JSONP 和 JSON")]),v._v(" "),e("h2",{attrs:{id:"跨域访问"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#跨域访问"}},[v._v("#")]),v._v(" 跨域访问")]),v._v(" "),e("p",[v._v("什么是跨域访问：")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("协议")]),v._v(" | "),e("code",[v._v("域名")]),v._v(" | "),e("code",[v._v("端口号")]),v._v(" 有一个不一样就是跨域")]),v._v(" "),e("li",[v._v("简单来说就是 A 网站的 "),e("code",[v._v("javascript")]),v._v(" 代码试图访问 B 网站，包括提交内容和获取内容。由于安全原因，跨域访问是被各大浏览器所默认禁止的，"),e("code",[v._v("XmlHttpRequest")]),v._v(" 也不例外")]),v._v(" "),e("li",[v._v("如果两个页面拥有相同的协议（"),e("code",[v._v("protocol")]),v._v("），端口（如果指定），和主机，那么这两个页面就属于同一个源（"),e("code",[v._v("origin")]),v._v("），"),e("code",[v._v("JavaScript")]),v._v(" 允许这种同源页面的数据互相通信")]),v._v(" "),e("li",[v._v("端口和协议，一般生产项目中 WEB 页面是"),e("code",[v._v("「看不见」")]),v._v("端口号的，其实是缺省端口 "),e("code",[v._v("80")]),v._v("，目前网络劫持盛行，因此流行使用安全协议 "),e("code",[v._v("HTTPS")]),v._v(" 来避免劫持")]),v._v(" "),e("li",[v._v("我们使用域名来指定一台主机，当然你也可以直接使用 "),e("code",[v._v("IP")]),v._v(" 地址，重点在于不要以为 "),e("code",[v._v("jandou.com")]),v._v(" 与 "),e("code",[v._v("www.jandou.com")]),v._v(" 是同一域名，实际上 "),e("code",[v._v("www.jandou.com")]),v._v(" 是一个二级域名，而 "),e("code",[v._v("jandou.com")]),v._v(" 俗称为裸域，")])]),v._v(" "),e("h2",{attrs:{id:"json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#json"}},[v._v("#")]),v._v(" JSON")]),v._v(" "),e("p",[e("code",[v._v("JSON(JavaScript Object Notation)")]),v._v(" 是一种轻量级的数据交换格式，它使得人们很容易的进行阅读和编写，同时也方便了机器进行解析和生成。它是基于 "),e("code",[v._v("JavaScript Programming Language , Standard ECMA-262 3rd Edition - December 1999")]),v._v(" 的一个子集。 "),e("code",[v._v("JSON")]),v._v(" 采用完全独立于程序语言的文本格式，但是也使用了类 "),e("code",[v._v("C")]),v._v(" 语言的习惯（包括 C, C++, C#, Java, JavaScript, Perl, Python 等）。这些特性使 JSON 成为理想的数据交换语言。")]),v._v(" "),e("p",[v._v("JSON 基于两种结构：")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("key:value")]),v._v(" 的集合（"),e("code",[v._v("A collection of name/value pairs")]),v._v("）。不同的编程语言中，它被理解为对象（"),e("code",[v._v("object")]),v._v("），纪录（"),e("code",[v._v("record")]),v._v("），结构（"),e("code",[v._v("struct")]),v._v("），字典（"),e("code",[v._v("dictionary")]),v._v("），哈希表（"),e("code",[v._v("hash table")]),v._v("），有键列表（"),e("code",[v._v("keyed list")]),v._v("），或者关联数组 （"),e("code",[v._v("associative array")]),v._v("）")]),v._v(" "),e("li",[v._v("值的有序列表（"),e("code",[v._v("An ordered list of values")]),v._v("）。在大部分语言中，它被实现为数组（"),e("code",[v._v("array")]),v._v("），矢量（"),e("code",[v._v("vector")]),v._v("），列表（"),e("code",[v._v("list")]),v._v("），序列（"),e("code",[v._v("sequence")]),v._v("）")])]),v._v(" "),e("p",[v._v("JSON 具有以下这些形式：")]),v._v(" "),e("ul",[e("li",[v._v("对象（"),e("code",[v._v("object")]),v._v("） 是一个无序的 "),e("code",[v._v("key/value")]),v._v(" 集合。一个对象以 "),e("code",[v._v("{")]),v._v("（左括号）开始，"),e("code",[v._v("}")]),v._v("（右括号）结束。每个 "),e("code",[v._v("key")]),v._v(" 后跟一个 "),e("code",[v._v(":")]),v._v("（冒号）；"),e("code",[v._v("键值对")]),v._v(" 之间使用 "),e("code",[v._v(",")]),v._v("（逗号）分隔")]),v._v(" "),e("li",[v._v("数组（"),e("code",[v._v("array")]),v._v("） 是值（"),e("code",[v._v("value")]),v._v("）的有序集合。一个数组以 "),e("code",[v._v("[")]),v._v("（左中括号）开始，"),e("code",[v._v("]")]),v._v("（右中括号）结束。值之间使用 "),e("code",[v._v(",")]),v._v("（逗号）分隔")]),v._v(" "),e("li",[v._v("值（"),e("code",[v._v("value")]),v._v("） 可以是双引号括起来的字符串（"),e("code",[v._v("string")]),v._v("）、数值("),e("code",[v._v("number")]),v._v(")、"),e("code",[v._v("true")]),v._v("、"),e("code",[v._v("false")]),v._v("、 "),e("code",[v._v("null")]),v._v("、对象（"),e("code",[v._v("object")]),v._v("）或者数组（"),e("code",[v._v("array")]),v._v("）。这些结构可以嵌套")]),v._v(" "),e("li",[v._v("字符串（"),e("code",[v._v("string")]),v._v("） 是由双引号包围的任意数量 "),e("code",[v._v("Unicode")]),v._v(" 字符的集合，使用反斜线转义。一个字符（"),e("code",[v._v("character")]),v._v("）即一个单独的字符串（"),e("code",[v._v("character string")]),v._v("）\n"),e("code",[v._v("JSON")]),v._v("的字符串（"),e("code",[v._v("string")]),v._v("）与"),e("code",[v._v("C")]),v._v("或者"),e("code",[v._v("Java")]),v._v("的字符串非常相似")]),v._v(" "),e("li",[v._v("数值（"),e("code",[v._v("number")]),v._v("） 也与"),e("code",[v._v("C")]),v._v("或者"),e("code",[v._v("Java")]),v._v("的数值非常相似。只是"),e("code",[v._v("JSON")]),v._v("的数值没有使用八进制与十六进制格式")])]),v._v(" "),e("h2",{attrs:{id:"jsonp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsonp"}},[v._v("#")]),v._v(" JSONP")]),v._v(" "),e("p",[v._v("用于解决主流浏览器的跨域数据访问的问题：")]),v._v(" "),e("ul",[e("li",[v._v("利用 "),e("code",[v._v("<script>")]),v._v(" 下载脚本文件可以跨域访问")]),v._v(" "),e("li",[e("code",[v._v("src")]),v._v(" 中添加需要访问的地址，相当于立即执行访问的服务，得到的结果通过回调函数的参数包裹")]),v._v(" "),e("li",[v._v("因为是标签所以只能是 "),e("code",[v._v("get")]),v._v(" 方式")]),v._v(" "),e("li",[v._v("只能使用异步")])])])}),[],!1,null,null,null);_.default=c.exports}}]);